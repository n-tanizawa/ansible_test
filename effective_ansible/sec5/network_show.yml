---
- hosts: network
  gather_facts: no 

  tasks:
##### ■ 前処理 #####
##(1)日時別ディレクトリ名の変数定義
   - name: create parent directory
     set_fact:
      logdir_date: "./log/log_{{ lookup('pipe', 'date +%Y%m%d_%H%M_%S') }}"
     run_once: yes

##(2)ターゲットノード別ディレクトリの作成
   - name: create directory for target node
     file:
      path: "{{ logdir_date }}/{{ inventory_hostname }}"
      state: directory
     register: logdir_host

##### ■ コマンド実行処理 #####

##### Cisco IOS用blockの開始 #####
   - name: ios block
     block:
##(3)Cisco IOSコマンドの実行
      - name: ios show command
        ios_command:
          commands: "{{ item }}"
        register: ios_results
        loop: "{{ show_commands }}"

##(4)Cisco IOSコマンド実行結果の変数定義
      - name: set ios result
        set_fact:
          results: "{{ ios_results.results }}"
     when: ansible_network_os == "ios"
##### Cisco IOS用blockの終了 #####

##### Juniper Junos用blockの開始 #####
   - name: junos block
     block:
##(5)Juniper Junosコマンドの実行
      - name: junos show command
        junos_command:
          commands: "{{ item }}"
        register: junos_results
        loop: "{{ show_commands }}"

##(6)Juniper Junosコマンド実行結果の変数定義
      - name: set junos result
        set_fact:
          results: "{{ junos_results.results }}"
     when: ansible_network_os == "junos"
##### Juniper Junos用blockの終了 #####

##### ■ 後処理 #####

##(7)コマンド別ファイルの保存
   - name: save files per commands
     copy:
      content: "{{ item.stdout[0] }}"
      dest: "{{ logdir_host.path }}/{{ item.item | replace(' ', '_')}}.log"
     loop: "{{ results }}"
     loop_control:
      label: "{{ item.item }}"

##(8)ターゲットノード別ファイルの保存
   - name: save files per hosts
     blockinfile:
      block: "{{ item.stdout[0] }}"
      path: "{{ logdir_host.path }}/{{ inventory_hostname }}.log"
      marker: "================== {{ item.item }} =================="
      create: yes
     loop: "{{ results }}"
     loop_control:
      label: "{{ item.item }}"