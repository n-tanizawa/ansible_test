[よく利用されるネットワークモジュール]
ネットワークモジュールには、*_command、*_config、*_factsのように、多くのプラットフォームに共通した機能がある。

■ ios_commandモジュール
Cisco IOSのネットワーク機器に対して、指定したコマンドを実行するモジュール。
実行できるコマンドは、showコマンドやclearコマンドなど。
ios_commandモジュール内部ではコンフィグレーションモードに移行せず、設定コマンドは実行できないため、設定コマンドに
ついては後述のios_configなどを利用する。
また、手動での実行時と同じように、コマンド(例えばshow running-config)によっては特権が必要。

・ios_commandモジュールの主なアーギュメント
アーギュメント名    指定する値      デフォルト値　概要
commands          文字列のリスト   (なし)       実行するコマンドを指定する。1つのコマンドまたは複数のコマンドを
                                            　指定できる

・ios_commandモジュールの利用例
- name: show command
  ios_command:
    commands:
      - show version
      - show running-config
    register: result

- name: debug
  debug:
    msg: "{{ result.stdoout_lines[0] }}"

(venv)$ ansible-playbook -i inventory.ini ios_command.yml

レジスタ変数resultに格納した場合、result.stdoutやresult.stdoout_linesという私邸でコマンドの結果そのものを
参照できる。stdoutとstdout_linesは改行の取り扱いが異なる。
result.stdoutにはコマンドの結果が改行コードを含めて格納されるのに対し、result.stdout_linesには1行1要素のリストが
格納される。また、commandsアーギュメントにはリストで複数のコマンドが指定できる。
各コマンドと結果の格納先は、1つ目のコマンド結果がresult.stdout[0]およびresult.stdout_lines[0]に、
2つ目のコマンド結果がresult.stdout[1]およびresult.stdout_lines[1]に格納される。

・コマンド実行結果と格納先変数の関係
格納先                   内容                            例
result.stdout[0]        show versionコマンド結果の      "Cisco IOS XE Software, Version 16.06.03\nCisco IOS ...略
                        改行コードを含む内容
result.stdout_lines[0]   show versionコマンド結果の       [
                        1行1要素のリスト                 "Cisco IOS XE Software,Version16.06.03",
                                                　　    "Cisco IOS Software [Everest], ...略...",
                                                        ...略...
                                                        ]
result.stdout[0][0]     show versionコマンド結果の１行目  "Cisco IOS XE Software, Version16.06.03"
result.stdout[1]        show running-configコマンド結果  "Building configuration...\n\nCurrent configuration...略..."
                        の改行コードを含む内容

■ ios_configモジュール
Cisco IOSのネットワーク機器に対して、設定コマンドを実行するモジュール。
ios_commandモジュールとは異なり、グローバルコンフィグレーションモードに移行するため設定コマンドを実行できる。

・ios_configモジュールの主なアーギュメント
アーギュメント名    指定する値      デフォルト値　概要
lines             文字列のリスト     なし       実行するコマンドを指定する。1つのコマンドまたは複数のコマンドを指定できる。
parents           文字列のリスト     なし       linesアーギュメントで指定したコマンドを実行する階層を指定する。(interfaceコマンドなど)
src               ファイル名のパス   なし       設定するコマンドを記載したファイル名を指定する。jinja2テンプレートも利用できる。
save_when         always           never      copy running-config startup-configコマンドを実行する条件を指定する。
                　never
                  modified
                  changed

※デフォルトのneverでは、startup-configにコンフィグが保存されず、ネットワーク機器を再起動すると加えた変更が
反映されないため注意が必要。
modifiedはタスクによる変更とは関係なくstartup-configとrunning-configに差分があった場合に、running-configを
startup-configにコピーする。
changedはタスクによってコンフィグに差分が生じた場合に保存する。

・ios_configモジュールの利用例
- name: interface config
  ios_config:
    lines:
      - ip address 172.16.0.254 255.255.255.0
      - description core-to-dest 
    parents:
      - interface Vlan100

(venv)$ ansible-playbook -i inventory.ini ios_config.yml

■ ios_factsモジュール
Cisco IOSのネットワーク機器のファクトを収集するモジュール。
ホスト名、OSバージョン、シリアルナンバー、インターフェイス情報などのファクトを収集できる。

・ios_factsモジュールの主なアーギュメント
アーギュメント名    指定する値      デフォルト値　概要
gather_subset     all             !config     収集するファクトの種類を指定する。デフォルト値の!configのように
　                hardware                    指定値の最初に!をつけると収集対象から除外する
                　interfaces 
                  config

・ios_factsモジュールの利用例     
- name: facts
  ios_facts:
    gather_subset: all

- name: debug
  debug:
    msg: "{{ ansible_net_version }}"       