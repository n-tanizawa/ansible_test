[タスクの並列処理]
Ansibleは特別な設定を行わずとも複数のターゲットノードに対して並列に処理を行っている。ただし、同時にタスクが
実行される台数は、ansible.cfgにある「forks」というパラメータで定義する。forksはデフォルトで、5セッションが
並列に実行される。コントロールノードからは、実行ファイルの転送と実行明理恵のみを送信するだけなので、ターゲット
ノードの台数に応じてforksの値を増やすと、比較的容易に処理全体のパフォーマンスを向上できる。

・forksの設定(ansible.cfg)
[defaults]
forks = 15

forksを増やすとタスクの並列実行行数が増えるが、処理の内容によっては、並列実行時の順序に注意すべきタスクも
存在する。これらの並列処理の順序はストラテジプラグインで管理できる。

■ ストラテジプラグインの利用
Ansibleの並列実行処理は、タスク同士で逐次実行される。つまり、並列実行しているタスクの中で一番処理が遅い
ノードの応答を待ってから、次のタスクの実行に進む。これは、手順書に示した作業を定義した順に行うためには
重要な仕組みだが、個別の待ち時間が生じるため、パフォーマンスに影響を与える。このような課題を解決するために
開発されたのが並列処理をコントロールするストラテジプラグインである。

ストラテジプラグインは、プレイ上に定義する。デフォルトは「linear」方式という接続方式であり、タスクごとに
全ターゲットノードの処理を待ちながらプレイを進める。その他にも、以下のストラテジプラグインが用意されている。

linear: 各ホストのタスク終了を待ち、シーケンシャルに実行する
host_pinned: 中断することなく各ホストでタスクを実行する
free: 全てのホストを待たずにタスクを実行する

「free」または「linear」では、アクティブなプレイを持つホストの数は、forksの数を超えない。しかし、
「host_pinned」を設定することによって、開始を待機しているホストに対して新規の接続を試みる。
開始タイミングを除いては「free」と同じ動作を行う。
「free」や「host_pinned」を利用する場合に注意すべき点は、各ターゲットノード間で処理の依存関係を保たないこと
である。たとえば、各ターゲットノードでクラスタを初期化する処理を行う場合は、クラスタ情報の同期タイミングなど
に注意しなければならない。このように実行タイミングに影響を与えるタスクでは、ストラテジやタスク順序の特徴を
よく理解したうえで利用する。

・strategyの設定
---
- hosts: web_servers
  strategy: free
  tasks: