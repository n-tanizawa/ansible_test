[プレイブックの分割]
インベントリとは対照的に、プレイブックの分割はターゲットノードの属性に関連せず、タスクのカテゴリによって
ファイルを分割する。タスクとは、自動化を行いたい対象である「システムコンポーネント(役割)」とその「運用タスク
プロセス」の2つのカテゴリに分類できる。

・システムコンポーネント(役割)
構築対象となるインフラリソース、ミドルウェアやアプリケーションなど、ロール(役割)で取り扱ってきたコンポーネント
の単位
・運用タスクプロセス
各コンポーネントの運用ライフサイクル(構築、復旧、監視、評価など)に応じて分割した単位

これらの分割範囲をどのように設計するのかによって、プレイブックの構成が設計できる。
「運用タスクプロセス」とは、各コンポーネントのインストール、設定、起動停止、状態チェック、クラスタ化、クラスタ
への追加/削除などの運用単位である。
大規模環境においてAnsibleのプレイブックで構築、運用するには、これらのカテゴリを意識して構成を組み立てていく
ことが重要。特にタスクが多いプレイブックではカテゴリごとにYAMLファイルを分割しなければ、タスク順序による定義
エラーを引き起こす可能性がある。したがって、適切に分割するためにカテゴリをあらかじめ決めておくのが良い。
また、ある程度のプレイブックのパターンを決めることにより、1つのファイルに定義されるタスク数が限定され、共有
する場合もプレイブックの見通しが良くなる。

どのパターンにおいても注意すべきことは、プレイブックもインベントリのディレクトリ構成と同様に、細かく分類すれ
ばするほど柔軟性は高まるが、可読性は低下することである。したがって、自動化対象の実行範囲やプレイブックを共有
するメンバのスキルなども考慮に入れたうえで、適切なプレイブックの配置を設計する。