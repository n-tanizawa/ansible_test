[実行結果の取り扱い]
通常タスク実行に異常が発生した場合は、特別な設定を行わずとも処理が停止してコマンドのリターンコードが返ってくる。
ところがある特定の条件においては、この実行結果を意図的にコントロールできなければいけない場合がある。
例えば、バックアップ処理など異常ステータスが出ても処理を継続し、成功するまで同じ処理を繰り返したりする場合などが考えられる。

■ 実行結果の操作
・changed_whenディレクティブ
Ansibleの実行結果がchangedになるということは、タスクによってターゲットノードの状態が変更されたことを示す。
しかし、コマンドモジュール群を利用すると、特にターゲットノードの状態は変わらずとも、コマンドが発行された際に
changedという結果が返される。これは、Ansibleは状態を収束させるという目的から、特定のコマンドが発動したい時点で
変更処理が行われたと認識する仕組みが備わっているためである。これでは実行結果がわかりにくいため、
特定の条件が揃った場合にのみchangedという結果を示すように判断するディレクティブがchanged_whenである。

これは、whenを利用した条件判定構文に似ているが、判定する順序が異なる。
whenでは、判定条件を行った結果によってタスクを実行する。一方、changed_whenではタスクを実行した後の条件に従って
changedという結果にするのかを判定する。したがって、changed_whenを利用する場合は、タスクの実行結果を格納する
レジスタ変数と合わせて利用される場合がほとんど。

・failed_whenディレクティブ
changed_whenと同じようにタスク後の条件に従ってfailed状態にしてタスクを停止させる場合は、failed_whenを利用する。
ただし、どちらの場合も本来タスクが成功する場合のステータスを変更するときに利用する。

・実行結果の操作例
tasks:
## /tmpフォルダが用意されており、条件に合わないためfailedではないとみなされて次の処理に進む
 - name: Control status by failed_when
   command: mkdir /tmp
   register: failed_result
   failed_when: failed_result.stderr == ""

## ansibleがインストールされていればOKの状態になる
 - name: Control status by changed_when 
   command: which ansible
   register: changed_result
   changed_when: changed_result.rc != 0

