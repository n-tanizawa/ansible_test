[Docker環境の事前準備]
■ Dockerのインストール
## CentOSに含まれる既存のパッケージ(docker-engineやdocker)の削除
$ sudo yum remove docker \
docker-client \
docker-client-latest \
docker-common \
docker-latest \
docker-latest-logrotate \
docker-engine
## Docker CEのインストールに必要なパッケージをインストール
$ sudo yum install -y yum-utils \
device-mapper-persistent-data lvm2
## Docker CE用のYumリポジトリの登録
$ sudo yum-config-manager \
--add-repo https://download.docker.com/linux/centos/docker-ce.repo
## Docker CEのインストールに必要なパッケージをインストール
$ sudo yum makecache fast ##インデックスの更新
$ sudo yum update -y ##パッケージアップデート
$ sudo yum install \
-y docker-ce-18.09.6-3.el7.x86_64 \
docker-ce-cli-18.09.6-3.el7.x86_64 \
containerd.io
$ sudo mkdir /etc/docker
$ sudo sh -c "cat <<EOF > /etc/docker/deamon.json
{
\"exec-opts\": [\"native.cgroupdriver=systemd\"],
\"log-driver\": \"json-file\",
\"log-opts\": {
\"max-seze\": \"100m\"
},
\"storage-driver\": \"overlay2\",
\"storage-opts\": [
\"overlay2.override_kernel_check=true\"
]
}
EOF"
$ sudo mkdir -p /etc/systemd/system/docker.service.d
## Dockerの起動
$ sudo systemctl enable docker
$ sudo systemctl daemon-reload
$ sudo systemctl start docker

[Docker環境の前提条件]
コントロールノード
・Docker SDK for Python 1.70以上
・Python2.7またはPython3以上
ターゲットノード
・Docker Remote APIバージョン1.20以上

■ Docker SDK for Pythonのインストール
Dockerモジュールには、PythonのライブラリであるDocker SDKが利用されているため、事前にコントロールノードに
インストールしておく必要がある。Docker専用モジュールを利用する際は、以下の2種類の接続方式によって、ターゲット
ノードが異なる。
(1)コントロールノード上からTCP経由でDocker Remote APIに接続する方式
(2)ターゲットノード側にSSH接続を行った後に、Unixドメインソケットを利用してDocker Remote APIに接続する方式
どちらの場合においても、Ansibleの実行スクリプトを動作させるコントロールノード上でDocker SDKがインストール
されている必要があるため、コントロールノードからTCP経由で接続するのが良い。

$ sudo pip3 install docker

■ Docker Remote APIの設定
Dockerのインストール後のデフォルト設定では、Docker Remote APIは、Unixドメインソケットでリッスンされており、
ホスト上のrootユーザからのみアクセスが許可されている。この状態では、外部からAPIを利用したプロビジョニング操作
は行えない。そのためDockerの起動オプションを変更して、事前にTCPによるAPI接続設定を行う。
# /etc/systemd/system/docker.service.d/override.conf
[service]
ExecStart=
ExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2376
## -Hオプション dockerdの待機ソケット(UnixソケットまたはTCPポート)にバインドする
デフォルトの設定では、systemdのソケットアクティベーション機能により、/lib/systemd/system/docker.socketを
参照する。
$ sudo mkdir -v /etc/systemd/system/docker.service.d
## ユニットファイルの更新
$ sudo vi /etc/systemd/system/docker.service.d/docker_options.conf
$ sudo systemctl daemon-reload
$ sudo systemctl restart docker.service
## firewalldの追加
firewall-cmd --add-port=2376/tcp --permanent
firewall-cmd --reload
firewall-cmd --list-all